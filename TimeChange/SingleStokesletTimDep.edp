border a(t=0,1){x=t;y=0;};
border b(t=0.5,0){x=t;y=t;};
border c(t=1,0.5){x=t;y=1-t;};

//mesh Th=buildmesh(a(30) + c(30) + b(30));
mesh Th=square(30,30);

fespace Xh(Th,P2);
fespace Mh(Th,P1);

Xh u1,v1;
Xh u2,v2;
Xh p,q;

real x0=0.5;
real y0=0.1;
real fx=0.00;
real fy=0.05;
real fmag=sqrt(fx^2+fy^2);
real dt=0.001;
real t = 1.0;
int tstep = (t/dt);
real a0 = 0.1;


real[int] xdat(tstep);
real[int] ydat(tstep);

for(int t=0; t<tstep; t++){

  func R=sqrt(((x-x0)*(x-x0)) + ((y-y0)*(y-y0)))+.00000000001;
  func Norm=1/R;

  func u10=(1/(6*pi))*((((x-x0)*(x-x0)*fx) + ((x-x0)*(y-y0)*fx)) * Norm * Norm * Norm) + (fx*Norm);
  func u20=(1/(6*pi))*((((y-y0)*(x-x0)*fx) + ((y-y0)*(y-y0)*fx)) * Norm * Norm * Norm) + (fy*Norm);

  real epsr=1e-8;
  cout << "Time Step: " << t << "/" << tstep << endl;
  solve Stokes([u1,u2,p],[v1,v2,q]) =
      int2d(Th)( ( dx(u1)*dx(v1) + dy(u1)*dy(v1)
              +  dx(u2)*dx(v2) + dy(u2)*dy(v2) )
              - p*q*epsr
              + p*dx(v1)+ p*dy(v2)
              + dx(u1)*q+ dy(u2)*q
              )
              + on(1,2,3,4,u1=-u10,u2=-u20);

  Xh vor = dx(u2) - dy(u1);

  func dnorm = 1/(vor*sqrt(x^2+y^2)+0.00000000000001);

  func d1 = -vor * y * dnorm;
  func d2 = vor * x * dnorm;

  real fnew1 = ((d1(x0,y0)*dt + (fx/fmag)));
  real fnew2 = ((d2(x0,y0)*dt + (fy/fmag)));
  real fnewmag = sqrt(fnew1^2+fnew2^2);
  fnew1 *= fmag/fnewmag;
  fnew2 *= fmag/fnewmag;

  xdat[t] = x0;
  ydat[t] = y0;
  x0 += dt*(u1(x0,y0) + (-fx/(8 * pi * a0)));
  y0 += dt*(u2(x0,y0) + (-fy/(8 * pi * a0)));
  fx = fnew1;
  fy = fnew2;

  cout << fx << ", " << fy << endl;
  cout << sqrt(fx^2 + fy^2) << ", " << fmag << endl;;
}
//
//Xh U1=u1+u10;
//Xh U2=u2+u20;

plot(Th,[xdat,ydat]);
